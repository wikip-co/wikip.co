<script type="text/javascript">
  const searchFunc = (path, search_id, content_id) => {
      'use strict';
      
      const $input = document.getElementById(search_id);
      const $resultContent = document.getElementById(content_id);
      
      // Set initial loading message
      $resultContent.innerHTML = "<ul><span class='local-search-empty'>Loading Search Index...</span></ul>";
  
      if (!$input || !$resultContent) {
          console.error('Search elements not found');
          return;
      }
  
      fetch(path, { 
          headers: { 'Accept': 'application/xml' }
      })
      .then(response => {
          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
          return response.text();
      })
      .then(xmlString => {
          const parser = new DOMParser();
          const xmlDoc = parser.parseFromString(xmlString, 'text/xml');
          
          const datas = Array.from(xmlDoc.getElementsByTagName('entry')).map(entry => ({
              title: entry.getElementsByTagName('title')[0]?.textContent || 'Untitled',
              content: entry.getElementsByTagName('content')[0]?.textContent || '',
              url: entry.getElementsByTagName('url')[0]?.textContent || '',
              categories: Array.from(entry.getElementsByTagName('category')).map(cat => cat.textContent.trim()),
              tags: Array.from(entry.getElementsByTagName('tag')).map(tag => tag.textContent.trim())
          }));
  
          // Clear loading message once index is loaded
          $resultContent.innerHTML = '';
  
          const debounce = (func, wait) => {
              let timeout;
              return (...args) => {
                  clearTimeout(timeout);
                  timeout = setTimeout(() => func.apply(this, args), wait);
              };
          };
  
          const performSearch = debounce(() => {
              const searchTerm = $input.value.trim().toLowerCase();
              if (!searchTerm) {
                  $resultContent.innerHTML = '';
                  return;
              }
  
              const keywords = searchTerm.split(/\s+/);
              let results = '';
  
              datas.forEach(data => {
                  const title = data.title.toLowerCase();
                  const content = data.content.toLowerCase().replace(/<[^>]+>/g, '');
                  const categories = data.categories.join(' ').toLowerCase();
                  const tags = data.tags.join(' ').toLowerCase();
                  
                  const isMatch = keywords.every(keyword => 
                      title.includes(keyword) ||
                      content.includes(keyword) ||
                      categories.includes(keyword) ||
                      tags.includes(keyword)
                  );
  
                  if (isMatch) {
                      const absoluteUrl = `/${data.url.replace(/^\/+/, '')}`;
                      results += `
                          <li>
                              <a href="${absoluteUrl}" class="search-result-title">
                                  ${data.title}
                              </a>
                              <div class="search-result-meta">
                                  <span class="categories">${data.categories.join(', ')}</span>
                                  <span class="tags">${data.tags.join(', ')}</span>
                              </div>
                          </li>
                      `;
                  }
              });
  
              $resultContent.innerHTML = results ?
                  `<ul class="search-result-list">${results}</ul>` :
                  "<ul><span class='local-search-empty'>No Results Found</span></ul>";
          }, 300);
  
          $input.addEventListener('input', performSearch);
      })
      .catch(error => {
          console.error('Search Error:', error);
          $resultContent.innerHTML = `<ul><span class='local-search-empty'>
              ${error.message.includes('404') ? 
                  'Search Index File Not Found' : 
                  'Search Service Error'}
          </span></ul>`;
      });
  
      document.addEventListener('click', (e) => {
          if (e.target.id === 'search-close-icon') {
              $input.value = '';
              $resultContent.innerHTML = '';
          }
      });
  };
</script>